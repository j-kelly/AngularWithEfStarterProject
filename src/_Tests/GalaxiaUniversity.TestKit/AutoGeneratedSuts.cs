// <auto-generated />
/* ************************************************************
 * 
 * 
 * AUTO GENERERATED - DO NOT ALTER
 * 
 * 
 * ************************************************************/
namespace GalaxiaUniversity.TestKit.Factories
{
    using GalaxiaUniversity.Domain.AppServices.Services;
    using GalaxiaUniversity.Domain.AppServices.Services.ExamplesHandlers;
    using GalaxiaUniversity.Domain.Core.Behaviours;
    using GalaxiaUniversity.Web.Angular.Controllers;
    using Moq;
    using NRepository.Core;
    using NRepository.Core.Query;

    // Auto generated
    public partial class ExamplesApplicationServiceFactory
    {
        private readonly MockBehavior _MockBehaviour;

        public ExamplesApplicationServiceFactory()
                    : this(MockBehavior.Default)
        {
        }

        public ExamplesApplicationServiceFactory(MockBehavior mockBehaviour)
        {
            _MockBehaviour = mockBehaviour;

            RepositoryMock = new Mock<IRepository>(_MockBehaviour);

            Initalise();
        }

        partial void Initalise();

        // IRepository
        private IRepository _IRepository;
        public Mock<IRepository> RepositoryMock { get; set; }
        public IRepository _GetRepository() { return _IRepository ?? RepositoryMock.Object; }
        public IRepository _SetRepository(IRepository obj) { _IRepository = obj; return obj; }

        public ExamplesApplicationService Object
        {
            get
            {
                return new ExamplesApplicationService(_GetRepository());
            }
        }

        public void VerifyAll()
        {
            RepositoryMock.VerifyAll();
        }
    }


    // Auto generated
    public partial class AddToShoppingCartHandlerFactory
    {
        private readonly MockBehavior _MockBehaviour;

        public AddToShoppingCartHandlerFactory()
                    : this(MockBehavior.Default)
        {
        }

        public AddToShoppingCartHandlerFactory(MockBehavior mockBehaviour)
        {
            _MockBehaviour = mockBehaviour;

            RepositoryMock = new Mock<IRepository>(_MockBehaviour);

            Initalise();
        }

        partial void Initalise();

        // IRepository
        private IRepository _IRepository;
        public Mock<IRepository> RepositoryMock { get; set; }
        public IRepository _GetRepository() { return _IRepository ?? RepositoryMock.Object; }
        public IRepository _SetRepository(IRepository obj) { _IRepository = obj; return obj; }

        public AddToShoppingCartHandler Object
        {
            get
            {
                return new AddToShoppingCartHandler(_GetRepository());
            }
        }

        public void VerifyAll()
        {
            RepositoryMock.VerifyAll();
        }
    }


    // Auto generated
    public partial class CountryControllerFactory
    {
        private readonly MockBehavior _MockBehaviour;

        public CountryControllerFactory()
                    : this(MockBehavior.Default)
        {
        }

        public CountryControllerFactory(MockBehavior mockBehaviour)
        {
            _MockBehaviour = mockBehaviour;

            QueryRepositoryMock = new Mock<IQueryRepository>(_MockBehaviour);
            ExamplesApplicationServiceMock = new Mock<IExamplesApplicationService>(_MockBehaviour);

            Initalise();
        }

        partial void Initalise();

        // IQueryRepository
        private IQueryRepository _IQueryRepository;
        public Mock<IQueryRepository> QueryRepositoryMock { get; set; }
        public IQueryRepository _GetQueryRepository() { return _IQueryRepository ?? QueryRepositoryMock.Object; }
        public IQueryRepository _SetQueryRepository(IQueryRepository obj) { _IQueryRepository = obj; return obj; }

        // IExamplesApplicationService
        private IExamplesApplicationService _IExamplesApplicationService;
        public Mock<IExamplesApplicationService> ExamplesApplicationServiceMock { get; set; }
        public IExamplesApplicationService _GetExamplesApplicationService() { return _IExamplesApplicationService ?? ExamplesApplicationServiceMock.Object; }
        public IExamplesApplicationService _SetExamplesApplicationService(IExamplesApplicationService obj) { _IExamplesApplicationService = obj; return obj; }

        public CountryController Object
        {
            get
            {
                return new CountryController(_GetQueryRepository(), _GetExamplesApplicationService());
            }
        }

        public void VerifyAll()
        {
            QueryRepositoryMock.VerifyAll();
            ExamplesApplicationServiceMock.VerifyAll();
        }
    }

}
